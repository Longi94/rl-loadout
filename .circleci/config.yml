version: 2.1

jobs:
  version-check:
    working_directory: ~/rl-loadout
    docker:
      - image: circleci/python:3.7.4
    steps:
      - checkout
      - run:
          name: Run version check
          command: python version_check.py
  frontend-lint:
    working_directory: ~/rl-loadout
    docker:
      - image: circleci/node:10.16-browsers
    steps:
      - checkout
      - run:
          name: Setup custom environment variables
          command: |
            echo 'export NG_CLI_ANALYTICS=ci' >> $BASH_ENV
      - restore_cache:
          key: dependency-cache-{{ checksum "frontend/package-lock.json" }}
      - run:
          name: install angular cli
          command: sudo npm install -g @angular/cli@8.3.8 > /dev/null
      - run:
          name: install-dependencies
          command: npm install
          working_directory: frontend
      - save_cache:
          key: dependency-cache-{{ checksum "frontend/package-lock.json" }}
          paths:
            - ./frontend/node_modules
      - run:
          name: angular-lint
          command: ng lint
          working_directory: frontend
  lib-lint:
    working_directory: ~/rl-loadout
    docker:
      - image: circleci/node:10.16-browsers
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "lib/package-lock.json" }}
      - run:
          name: install-dependencies
          command: npm install
          working_directory: lib
      - save_cache:
          key: dependency-cache-{{ checksum "lib/package-lock.json" }}
          paths:
            - ./lib/node_modules
      - run:
          name: lint
          command: npm run lint
          working_directory: lib
  frontend-build:
    working_directory: ~/rl-loadout
    docker:
      - image: circleci/node:10.16-browsers
    steps:
      - checkout
      - run:
          name: Setup custom environment variables
          command: |
            echo 'export NG_CLI_ANALYTICS=ci' >> $BASH_ENV
      - restore_cache:
          key: dependency-cache-{{ checksum "frontend/package-lock.json" }}
      - restore_cache:
          key: dependency-cache-{{ checksum "lib/package-lock.json" }}
      - run:
          name: install angular cli
          command: sudo npm install -g @angular/cli@8.1.1 > /dev/null
      - run:
          name: install-dependencies
          command: npm install
          working_directory: frontend
      - run:
          name: compile rl-loadout-lib
          command: npm install
          working_directory: lib
      - run:
          name: install rl-loadout-lib
          command: npm install ./../lib
          working_directory: frontend
      - save_cache:
          key: dependency-cache-{{ checksum "frontend/package-lock.json" }}
          paths:
            - ./node_modules
      - save_cache:
          key: dependency-cache-{{ checksum "lib/package-lock.json" }}
          paths:
            - ./lib/node_modules
      - run:
          name: angular-build
          command: ng build --prod
          working_directory: frontend
      - store_artifacts:
          path: frontend/dist/rl-loadout
      - persist_to_workspace:
          root: frontend/dist
          paths:
            - rl-loadout
  frontend-deploy:
    working_directory: ~/rl-loadout
    machine:
      enabled: true
    steps:
      - attach_workspace:
          at: frontend/dist
      - run:
          name: Remove old files
          command: ssh $SSH_USER@$SSH_HOST -p $SSH_PORT "echo $SSH_PASS | sudo -S rm -rf $FRONTEND_DIR/*"
      - run:
          name: Create dir for files in home
          command: ssh $SSH_USER@$SSH_HOST -p $SSH_PORT "mkdir -p ~/rl-loadout-frontend"
      - run:
          name: Copy artifacts to host
          command: scp -rP $SSH_PORT frontend/dist/rl-loadout/* "$SSH_USER@$SSH_HOST:/home/$SSH_USER/rl-loadout-frontend/"
      - run:
          name: Copy artifacts to deploy folder
          command: ssh $SSH_USER@$SSH_HOST -p $SSH_PORT "echo $SSH_PASS | sudo -S cp -r ~/rl-loadout-frontend/* $FRONTEND_DIR/"
      - run:
          name: Remove dir in home
          command: ssh $SSH_USER@$SSH_HOST -p $SSH_PORT "rm -rf ~/rl-loadout-frontend/"
  backend-deploy:
    working_directory: ~/rl-loadout
    machine:
      enabled: true
    steps:
      - checkout
      - run:
          name: Create dir for files in home
          command: ssh $SSH_USER@$SSH_HOST -p $SSH_PORT "mkdir -p ~/rl-loadout-backend"
      - run:
          name: Copy artifacts to host
          command: scp -rP $SSH_PORT backend/* "$SSH_USER@$SSH_HOST:/home/$SSH_USER/rl-loadout-backend/"
      - run:
          name: Copy artifacts to deploy folder
          command: ssh $SSH_USER@$SSH_HOST -p $SSH_PORT "echo $SSH_PASS | sudo -S cp -r ~/rl-loadout-backend/* $BACKEND_DIR/"
      - run:
          name: Remove dir in home
          command: ssh $SSH_USER@$SSH_HOST -p $SSH_PORT "rm -rf ~/rl-loadout-backend/"
      - run:
          name: Remove config.ini from working dir
          command: ssh $SSH_USER@$SSH_HOST -p $SSH_PORT "echo $SSH_PASS | sudo -S rm $BACKEND_DIR/config.ini || true"
      - run:
          name: Restart service
          command: ssh $SSH_USER@$SSH_HOST -p $SSH_PORT "echo $SSH_PASS | sudo -S systemctl restart rl-loadout"
workflows:
  version: 2
  build-and-deploy:
    jobs:
      - version-check
      - frontend-build
      - frontend-lint
      - lib-lint
      - frontend-deploy:
          requires:
            - frontend-build
          filters:
            branches:
              only: master
      - backend-deploy:
          requires:
            - frontend-build
          filters:
            branches:
              only: master
